/*! node_exercise 17-12-2018 */

"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function _createClass(e,t,n){return t&&_defineProperties(e.prototype,t),n&&_defineProperties(e,n),e}var MathDS=require("math-ds"),Plane=function(){function e(){_classCallCheck(this,e),this.initData()}return _createClass(e,[{key:"initData",value:function(){this.points=[],this.quantity=[],this.lines=[]}},{key:"deleteAll",value:function(){this.initData()}},{key:"getPoints",value:function(){for(var e=[],t=0;t<this.points.length;t++)e.push({x:this.points[t].position.x,y:this.points[t].position.y,quantity:this.quantity[t]});return this.points}},{key:"addPoint",value:function(e,t){for(var n=this,r=new MathDS.Vector2(e,t),s=!1,a=0;a<this.points.length;a++)r.equals(this.points[a])&&(s=!0,this.quantity[a]++);if(!s){this.quantity.push(1);var o=this.points.push(r)-1;Object.keys(this.lines.filter(function(e){return n.lines[a].addPoint(o)}).reduce(function(t,e){return t.pool.map(function(e){t[e]=!0}),t},{})).map(function(e){n.lines.push(new Line(n,o,e))})}}}]),e}(),Line=function(){function r(e,t,n){_classCallCheck(this,r),this.plane=e,this.center=this.plane.getPoint(t),this.vertex=this.plane.getPoint(n),this.distanceV=MathDS.Vector2(this.vertex,this.center).normalize(),this.pool=[t,n]}return _createClass(r,[{key:"addPoint",value:function(e){var t=this.isOnTheSameAxies(e);return t&&this.pool.push(e),t}},{key:"isOnTheSameAxis",value:function(e){var t=this.plane.getPoint(e),n=MathDS.Vector2(t,this.center).normalize(),r=n.negate();return 1===this.distanceV.dot(n)||1===this.distanceV.dot(r)}}]),r}(),express=require("express"),app=express(),bParser=require("body-parser"),path=require("path"),pointsForTest=[{x:3,y:5},{x:15,y:178},{x:3,y:5},{x:43,y:0}],errors=["no errors","wrong coordinates"];app.use(bParser.urlencoded({extended:!0})),app.use(bParser.json([]));var chars={};chars["{"]=encodeURIComponent("{"),chars["}"]=encodeURIComponent("}"),chars[","]=encodeURIComponent(","),chars['"']=encodeURIComponent('"'),chars[" "]=encodeURIComponent(" ");var pat={};pat.wSp="("+chars[" "]+")+",pat.wSs="("+chars[" "]+")*";var plane=new Plane;pointsForTest.map(function(e){plane.addPoint(e.x,e.y)});var router=express.Router();function errorHandler(e,t,n,r){n.status(500),n.json({error:e}),console.error(e),r()}router.use(function(e,t,n){n()}),router.get("/",function(e,t){t.json({"api/":""})}),router.route("/point".concat(chars[" "],"with").concat(chars[" "],"body").concat(chars[" "]).concat(chars["{"]).concat(chars[" "]).concat(chars['"'],"x").concat(chars['"'],"\\:").concat(chars[" "],":x,").concat(chars[" "]).concat(chars['"'],"y").concat(chars['"'],"\\:").concat(chars[" "],":y").concat(chars[" "]).concat(chars["}"])).post(function(e,t,n){var r=Number.parseInt(e.params.x),s=Number.parseInt(e.params.y);(Number.isNaN(r)||Number.isNaN(s))&&n(new Error(1)),plane.addPoint(r,s),t.json({msg:"Point has been added",x:r,y:s})}),router.route("/space").get(function(e,t){t.json({points:plane.getPoints()})}).delete(function(e,t){plane.deleteAll(),t.json({msg:"the space is empty now"})}),router.route("/lines/".concat(chars["{"],":num").concat(chars["}"])).get(function(e,t){t.json({line:{}})}),router.use(errorHandler),app.use("/api",router),app.listen(3e3);
//# sourceMappingURL=node_exercise.min.js.map