{"version":3,"sources":["../src/logic.js","../src/app.js"],"names":[],"mappings":"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","sourcesContent":["const MathDS = require('math-ds');\n\nclass Plane {\n\tconstructor () {\n\t\tthis.initData();\n\t}\n\n\tinitData () {\n\t\tthis.points = [];\n\t\tthis.quantity = [];\n\t\tthis.lines = [];\n\t}\n\n\tdeleteAll () {\n\t\tthis.initData();\n\t}\n\n\tgetPoint (index) {\n\t\tif (!this.points[index]) {\n\t\t\tthrow new Error('missing point');\n\t\t}\n\n\t\treturn this.points[index];\n\t}\n\n\tgetPoints () {\n\t\tvar pointsArray = [];\n\n\t\tfor (var i = 0; i < this.points.length; i++) {\n\t\t\tpointsArray.push(\n\t\t\t\t{\n\t\t\t\t\tx: this.points[i].x,\n\t\t\t\t\ty: this.points[i].y,\n\t\t\t\t\tquantity: this.quantity[i]\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t\treturn pointsArray;\n\t}\n\n\tgetLinesWithPoints (numOfPoints) {\n\t\treturn this.lines.filter( // to get all lines that\n\t\t\tline => {\n\t\t\t\treturn numOfPoints === line.pool.reduce( // summary of all points\n\t\t\t\t\t(acc, singlePoint) => {\n\t\t\t\t\t\tacc += this.quantity[singlePoint];\n\t\t\t\t\t\treturn acc;\n\t\t\t\t\t},\n\t\t\t\t\t0\n\t\t\t\t);\n\t\t\t}\n\t\t)\n\t\t.map(\n\t\t\tline => {\n\t\t\t\treturn line.pool.map(point => this.points[point]);\n\t\t\t}\n\t\t);\n\t}\n\n\ttest () {\n\t\tconsole.log('points', this.points);\n\t\tconsole.log('lines', this.lines);\n\t}\n\n\taddPoint (x, y) {\n\t\tconst p = new MathDS.Vector2(x, y);\n\t\tvar isDuplicate = false;\n\n\t\tfor (var i = 0; i < this.points.length; i++) {\n\t\t\tif (p.equals(this.points[i])) {\n\t\t\t\tisDuplicate = true;\n\t\t\t\tthis.quantity[i] ++;\n\t\t\t}\n\t\t}\n\n\t\tif (!isDuplicate) {\n      // add the point\n\t\t\tthis.quantity.push(1);\n\t\t\tconst pIndex = this.points.push(p) - 1;\n      // add lines\n\n      // the point is a new one, so I need to add it\n      // if the point is on the same axis the line is, addPoint() method\n      // will return true, false otherwise\n\n      // well now let's explain this line of code:\n      // Every time I add new point to the plain there are two thing that may\n      // happen\n\t\t\t// - the firts is the new point belong to the line\n      // - the second is that it doens't\n      // so in firts case the point is \"connected\" to all line's point through\n      // the line, this mean I do not need to add new line segment to the plain,\n      // because there already is one.\n      // In the second case the points of the line may be or may be not connected\n      // to the point through some line. So I need to filter all points that are\n      // connected to the current point and keep those that are not connected\n\n\t\t\tconst notGood = this.lines.filter(item => item.addPoint(pIndex))// all points that are olready connected\n      // to new point through new point\n\t\t\t.reduce( // will return an object with unic keys\n\t\t\t\t(acc, item) => {\n\t\t\t\t\titem.pool.map(point => {\n\t\t\t\t\t\tacc[point] = true;\n\t\t\t\t\t});\n\t\t\t\t\treturn acc;\n\t\t\t\t},\n\t\t\t\t{}\n\t\t\t);\n\t\t\t// console.log('notGood', notGood);\n\t\t\tfor (i = 0; i < this.points.length; i++) {\n\t\t\t\tif (i !== pIndex && !notGood[i]) {\n\t\t\t\t\tthis.lines.push(\n\t\t\t\t\t\tnew Line(this, pIndex, i)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// this.points.map(\n\t\t\t// \tpoint => {\n\t\t\t// \t\t// I use the code above to get all points that are not connected with line\n\t\t\t// \t\t// segment to the new point, though the new line segments must be created\n\t\t\t// \t\tthis.lines.push(\n\t\t\t// \t\t\tnew Line(this, pIndex, point)\n\t\t\t// \t\t);\n\t\t\t// \t}\n\t\t\t// );\n\t\t}\n\t}\n}\n\nclass Line {\n\tconstructor (plane, a, b) {\n\t\tthis.plane = plane;\n\n\t\tthis.center = this.plane.getPoint(a);\n\t\tthis.vertex = this.plane.getPoint(b);\n\n\t\tthis.distanceV = new MathDS.Vector2().subVectors(\n\t\t\tthis.vertex,\n\t\t\tthis.center\n\t\t).normalize();\n\n\t\tthis.pool = [a, b];\n\t}\n\n  // p is an index inside plane.points array, and addPoint return true\n  // only if the point belog to the line\n\taddPoint (p) {\n\t\tvar res = this.isOnTheSameAxis(p);\n\t\tif (res) {\n\t\t\tthis.pool.push(p);\n\t\t}\n\n\t\treturn res;\n\t}\n\n\tisOnTheSameAxis (p) {\n\t\tvar point = this.plane.getPoint(p);\n\n\t\tconsole.log(`confronto (x,${this.center.x} y,${this.center.y}====x:${this.vertex.x},y:${this.vertex.y}) +++++ (x:${point.x}, y:${point.y})`);\n\n\t\tconst differenceFromCenter = new MathDS.Vector2().subVectors(\n\t\t\tpoint,\n\t\t\tthis.center\n\t\t).normalize();\n\n\t\tconst negativeDifferenceFromCenter = differenceFromCenter.negate();\n\n\t\tconsole.log('this.distanceV.dot(differenceFromCenter)',this.distanceV.dot(differenceFromCenter));\n\t\tconsole.log('this.distanceV.dot(negativeDifferenceFromCenter)',this.distanceV.dot(negativeDifferenceFromCenter));\n\n\n\t\treturn Math.abs(this.distanceV.dot(differenceFromCenter)) >= 0.995 || Math.abs(this.distanceV.dot(negativeDifferenceFromCenter)) >= 0.995;\n\t}\n}\n\n// export default Plane;\n","/* globals Plane */\n\n// import Plane from './logic';\n\nvar express = require('express');\nvar app = express();\nvar bParser = require('body-parser');\nvar fs = require('fs');\n\nconst dataPath = './data/plane.json';\n\nif (!fs.existsSync(dataPath)) {\n\tfs.writeFileSync(\n\t\tdataPath,\n\t\t{}.toString(),\n\t\t{\n\t\t\tflag: 'w'\n\t\t}\n\t);\n}\n\nvar pointsForTest = JSON.parse(\n\tfs.readFileSync(\n\t\tdataPath,\n\t\t{\n\t\t\tencoding: 'utf8',\n\t\t\tflag: 'r'\n\t\t}\n\t)\n);\n\napp.use(bParser.urlencoded({ extended: true }));\napp.use(bParser.json([]));\n\n// special character managment\nvar chars = {};\nchars['{'] = encodeURIComponent('{');\nchars['}'] = encodeURIComponent('}');\nchars[','] = encodeURIComponent(',');\nchars['\"'] = encodeURIComponent('\"');\nchars[' '] = encodeURIComponent(' ');\n\n// pattern mana\nvar pat = {};\npat.wSp = '(' + chars[' '] + ')+';\npat.wSs = '(' + chars[' '] + ')*';\n\n// logic\nvar plane = new Plane();\n// init palne\npointsForTest.map(\n\titem => {\n\t\tplane.addPoint(item.x, item.y);\n\t}\n);\n\n// init router\nvar router = express.Router();\n\n// jsut for debug\nrouter.use(function (req, res, next) {\n\tnext();\n});\n\nrouter.get('/', function (req, res) {\n\tres.json({\n\t\t'api/': ''\n\t});\n});\n\n// add a point with body\n// router.route(`/point${chars[' ']}with${chars[' ']}body${chars[' ']}${chars['{']}${chars[' ']}${chars['\"']}x${chars['\"']}\\\\:${chars[' ']}:x,${chars[' ']}${chars['\"']}y${chars['\"']}\\\\:${chars[' ']}:y${chars[' ']}${chars['}']}`)\nrouter.route(`/point${chars[' ']}with${chars[' ']}body${chars[' ']}${chars['{']}${chars[' ']}${chars['\"']}x${chars['\"']}\\\\:${chars[' ']}:x,${chars[' ']}${chars['\"']}y${chars['\"']}\\\\:${chars[' ']}:y${chars['}']}`)\n.post(function (req, res, next) {\n\tconst xNumber = Number.parseFloat(req.params.x);\n\tconst yNumber = Number.parseFloat(req.params.y);\n\n\tif (Number.isNaN(xNumber) || Number.isNaN(yNumber)) {\n\t\tnext(new Error(1));\n\t}\n  // so far everything is ok\n\tplane.addPoint(xNumber, yNumber);\n\n\tres.json({\n\t\t'msg': 'Point has been added',\n\t\t'x': xNumber,\n\t\t'y': yNumber\n\t});\n});\n\n// view & delete all points\nrouter.route('/space')\n.get(function (req, res) {\n\tres.json({\n\t\t'points': plane.getPoints()\n\t});\n})\n.delete(function (req, res) {\n  // delete points from plane\n\tplane.deleteAll();\n\tres.json({\n\t\t'msg': 'the space is empty now'\n\t});\n});\n\n// line numbers\nrouter.route(`/lines/${chars['{']}:num${chars['}']}`)\n.get(\n\t(req, res, next) => {\n\t\tconst nNumber = Number.parseInt(req.params.num);\n\n\t\tif (Number.isNaN(nNumber)) {\n\t\t\tnext(new Error(1));\n\t\t}\n\n\t\tconsole.log(plane.getLinesWithPoints(nNumber));\n\t\tres.json(\n\t\t\t{\n\t\t\t\t'line': plane.getLinesWithPoints(nNumber)\n\t\t\t}\n\t\t);\n\t}\n);\n\n//test\nrouter.route(`/test`)\n.get(\n\t(req, res) => {\n\t\tplane.test();\n\t\tres.json({\n\t\t\t'test': 'look at terminal'\n\t\t});\n\t}\n);\n\nrouter.use(errorHandler);\n\n// router.all('/*', function (req, res) {\n// \tconsole.log('specific handler');\n// });\nfunction errorHandler (err, req, res, next) {\n\tres.status(500);\n\tres.json(\n\t\t{\n\t\t\t'error': err\n\t\t}\n\t);\n\tconsole.error(err);\n\tnext();\n}\n\n// add routes for space\napp.use('/api', router);\n\n// port listening\napp.listen(3000);\n"],"file":"node_exercise.dev.js"}